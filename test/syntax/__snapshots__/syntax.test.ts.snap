// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`molang - syntax should be able to parse and match the syntax tree generated 0. !variable.swaying && query.all_animations_finished 1`] = `
[
  {
    "operation": {
      "offset": 0,
      "text": "!",
      "type": 6,
    },
    "parameters": [
      {
        "operation": {
          "offset": 18,
          "text": "&&",
          "type": 6,
        },
        "parameters": [
          {
            "accessor": {
              "offset": 9,
              "text": ".",
              "type": 1,
            },
            "base": {
              "base": {
                "offset": 1,
                "text": "variable",
                "type": 5,
              },
              "type": 0,
            },
            "property": {
              "accessor": {
                "offset": 9,
                "text": ".",
                "type": 1,
              },
              "base": {
                "base": {
                  "offset": 1,
                  "text": "variable",
                  "type": 5,
                },
                "type": 0,
              },
              "property": {
                "base": {
                  "offset": 10,
                  "text": "swaying",
                  "type": 4,
                },
                "type": 0,
              },
              "type": 1,
            },
            "type": 1,
          },
          {
            "accessor": {
              "offset": 26,
              "text": ".",
              "type": 1,
            },
            "base": {
              "base": {
                "offset": 21,
                "text": "query",
                "type": 5,
              },
              "type": 0,
            },
            "property": {
              "accessor": {
                "offset": 26,
                "text": ".",
                "type": 1,
              },
              "base": {
                "base": {
                  "offset": 21,
                  "text": "query",
                  "type": 5,
                },
                "type": 0,
              },
              "property": {
                "base": {
                  "offset": 27,
                  "text": "all_animations_finished",
                  "type": 4,
                },
                "type": 0,
              },
              "type": 1,
            },
            "type": 1,
          },
        ],
        "type": 6,
      },
    ],
    "type": 6,
  },
]
`;

exports[`molang - syntax should be able to parse and match the syntax tree generated 1. variable.use_rolled_up_model = variable.rolled_up_time >= 0.2083 && (variable.unrolling_time == 0.0 || variable.unrolling_time <= 1.25 ); 1`] = `
[
  "surround: ",
  [
    "surround: ()",
    "variable [keyword]",
    ". [access]",
    "use_rolled_up_model [identifier]",
  ],
  "= [assignment]",
  [
    "surround: ()",
    [
      "surround: ()",
      "variable [keyword]",
      ". [access]",
      "rolled_up_time [identifier]",
    ],
    ">= [compare]",
    [
      "surround: ()",
      [
        "surround: ()",
        "0.2083 [number]",
      ],
      "&& [operator]",
      [
        "surround: ()",
        [
          "surround: ()",
          "variable [keyword]",
          ". [access]",
          "unrolling_time [identifier]",
          "== [compare]",
          "0.0 [number]",
          "|| [operator]",
          "variable [keyword]",
          ". [access]",
          "unrolling_time [identifier]",
          "<= [compare]",
          "1.25 [number]",
        ],
      ],
    ],
  ],
]
`;

exports[`molang - syntax should be able to parse and match the syntax tree generated 2. variable.walking = query.modified_move_speed > 0.01 && !variable.is_rolled_up; 1`] = `
[
  {
    "receiver": {
      "accessor": {
        "offset": 8,
        "text": ".",
        "type": 1,
      },
      "base": {
        "base": {
          "offset": 0,
          "text": "variable",
          "type": 5,
        },
        "type": 0,
      },
      "property": {
        "accessor": {
          "offset": 8,
          "text": ".",
          "type": 1,
        },
        "base": {
          "base": {
            "offset": 0,
            "text": "variable",
            "type": 5,
          },
          "type": 0,
        },
        "property": {
          "base": {
            "offset": 9,
            "text": "walking",
            "type": 4,
          },
          "type": 0,
        },
        "type": 1,
      },
      "type": 1,
    },
    "type": 2,
    "value": {
      "operation": {
        "offset": 52,
        "text": "&&",
        "type": 6,
      },
      "parameters": [
        {
          "a": {
            "accessor": {
              "offset": 24,
              "text": ".",
              "type": 1,
            },
            "base": {
              "base": {
                "offset": 19,
                "text": "query",
                "type": 5,
              },
              "type": 0,
            },
            "property": {
              "accessor": {
                "offset": 24,
                "text": ".",
                "type": 1,
              },
              "base": {
                "base": {
                  "offset": 19,
                  "text": "query",
                  "type": 5,
                },
                "type": 0,
              },
              "property": {
                "base": {
                  "offset": 25,
                  "text": "modified_move_speed",
                  "type": 4,
                },
                "type": 0,
              },
              "type": 1,
            },
            "type": 1,
          },
          "b": {
            "base": {
              "offset": 47,
              "text": "0.01",
              "type": 9,
            },
            "type": 3,
          },
          "operator": {
            "offset": 45,
            "text": ">",
            "type": 7,
          },
          "type": 7,
        },
        {
          "operation": {
            "offset": 55,
            "text": "!",
            "type": 6,
          },
          "parameters": [
            {
              "accessor": {
                "offset": 64,
                "text": ".",
                "type": 1,
              },
              "base": {
                "base": {
                  "offset": 56,
                  "text": "variable",
                  "type": 5,
                },
                "type": 0,
              },
              "property": {
                "accessor": {
                  "offset": 64,
                  "text": ".",
                  "type": 1,
                },
                "base": {
                  "base": {
                    "offset": 56,
                    "text": "variable",
                    "type": 5,
                  },
                  "type": 0,
                },
                "property": {
                  "base": {
                    "offset": 65,
                    "text": "is_rolled_up",
                    "type": 4,
                  },
                  "type": 0,
                },
                "type": 1,
              },
              "type": 1,
            },
          ],
          "type": 6,
        },
      ],
      "type": 6,
    },
  },
]
`;
